"""
# 대출 상환금 계산 서비스
# 대출금 상환금액을 계산해주는 프로그램
#
# 입력: 원금(principal) - 백만이상 정수만 허용
#       상환기간(years) - 1이상 정수만 허용
#       연이자율(interest rate) - 0.0에서 9.9 사이의 부동소수점수 만 허용
# 출력: 연상환금액, 월상환금액, 상환금액의 총계
#
# 작성자: 도경구
# 작성날짜: 2014년 12월 19일 (version 1.0)
"""

# 입력과 입력확인
print("대출 상환금 계산 서비스에 오심을 환영합니다.")
p = input("대출원금이 얼마인가요? (백만이상) ")
while not (p.isdigit() and int(p) >= 1000000) :
    p = input("대출원금이 얼마인가요? (백만이상) ")

y = input("상환기간은 몇년인가요? (1년이상 연단위) ")
while not (y.isdigit() and int(y) >= 1) :
    y = input("상환기간은 몇년인가요? (1년이상 연단위) ")

r = input("이자율은 몇% 인가요? (0.0~9.9) ")
t = r.partition(".")
while not ((t[0].isdigit() and t[2].isdigit() and len(t[0]) == len(t[2]) == 1 or \
            t[0].isdigit() and t[2] == "" and len(t[0]) == 1 or \
            t[0] == "" and t[2].isdigit() and len(t[2]) == 1) and \
           0.0 < float(r) <= 9.9):
      # float(r)의 범위 검사는 굳이 할 필요가 없다.
      # 왜냐하면 소수점 이상과 이하가 모두 숫자이고 한 자리 수임을 이미 확인했기 때문이다.
      # 소수점이 없는 입력도 한자리 수이면 굳이 따로 검사하지 않아도 통과한다.
      # 왜 그런지 각자 생각해보기 바란다.
      # 여기서 남은 문제는 이자율 0을 입력하는 경우이다.
      # 그러면 r이 0이 되고, 그러면 c가 1이 되고, 다음 식을 계산하는 과정에서 0으로 나누기 오류가 나온다.
      # 따라서 이자가 0%경우는 요구사항에 없었지만 통과시키지 않는 걸로 했다.
      # 통과시키고 싶으면 위의 비교식을 없애고 
      # 아래 d 변수 값을 계산하기 전에 c값을 검사하여 1인 경우 이자계산을 하지 않으면 된다.
    r = input("이자율은 몇% 인가요? (0.0~9.9) ")
    t = r.partition(".")

# 상환금 계산
p = int(p)
y = int(y)
r = float(r) / 100
c = (1 + r)**y
d = int(c * p * r / (c - 1))

# 출력
print("")
print("대출 상환금 내역을 알려드리겠습니다.")
print("대출원금:", p, "원")
print("연 이자율", r*100, "%로", y, "년동안 상환")
print("1년에 한번씩 상환하시면 매년", d, "원씩 지불하셔야 합니다.")
print("1달에 한번씩 상환하시면 매월", int(d/12), "원씩 지불하셔야 합니다.")
print("상환 완료시까지 총 상환금액은", d * y, "원 입니다.")
print("")
print("저희 서비스를 이용해주셔서 감사합니다.")
print("또 들려주세요.")
